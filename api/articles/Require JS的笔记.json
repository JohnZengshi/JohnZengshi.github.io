{"title":"RequireJS 是一个基于原生js实现的模块化解决方案","slug":"Require JS的笔记","date":"2017-09-20T01:59:08.848Z","updated":"2017-09-11T12:31:03.396Z","comments":true,"excerpt":"","content":"<blockquote>\n<h2 id=\"1-模块化\"><a href=\"#1-模块化\" class=\"headerlink\" title=\"1.模块化\"></a>1.模块化</h2></blockquote>\n<ul>\n<li><p>模块化是什么？</p>\n<ul>\n<li>具有实现一个完整功能的整体</li>\n</ul>\n</li>\n<li><p>为什么要使用模块化?</p>\n<ul>\n<li>为了更好地复用</li>\n<li>减少全局变量污染</li>\n<li><p>解决功能之间的依赖关系</p>\n<figure class=\"highlight bash\"><div class=\"mdui-table-fluid\"><table class=\"mdui-table mdui-table-hoverable \"><tr><td class=\"code\"><pre><div class=\"line\">  var KTV=(<span class=\"function\"><span class=\"title\">function</span></span>()&#123;</div><div class=\"line\">    var leastPrice=1000;</div><div class=\"line\">    var total=0;</div><div class=\"line\">    <span class=\"built_in\">return</span> &#123;</div><div class=\"line\">        pay:<span class=\"function\"><span class=\"title\">function</span></span>()&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(total&gt;=leastPrice)&#123;</div><div class=\"line\">                alert(<span class=\"string\">\"买单成功\"</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;)()</div></pre></td></tr></table></div></figure>\n</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<h2 id=\"2-模块化的实现方式\"><a href=\"#2-模块化的实现方式\" class=\"headerlink\" title=\"2.模块化的实现方式\"></a>2.模块化的实现方式</h2></blockquote>\n<ul>\n<li><p>使用闭包来实现</p>\n<ul>\n<li>随着功能的增加，暴露的全局变量也会越来越多<ul>\n<li>requireJS几乎没有全局变量</li>\n</ul>\n</li>\n<li>不能很好的解决模块依赖的问题</li>\n</ul>\n</li>\n<li><p>使用主流的一些实现模块化的库来实现</p>\n<ul>\n<li>requireJS–&gt;AMD规范–&gt;Async Module Define–&gt;(异步模块加载规范)</li>\n<li>seaJS–&gt;CMD规范–&gt;Common Module Define–&gt;同步模块加载规范 ：玉伯<ul>\n<li>阿里：朴灵《深入浅出Node.JS》</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>browserify</p>\n</li>\n<li>webpack</li>\n<li>Node.JS–&gt;CommonJS规范</li>\n<li>mv*框架<ul>\n<li>angular vue backbone avalon</li>\n</ul>\n</li>\n<li>组件化<ul>\n<li>react /react native /ionic</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<h2 id=\"3-面试的重点-AMD规范和CMD规范比较大的区别：\"><a href=\"#3-面试的重点-AMD规范和CMD规范比较大的区别：\" class=\"headerlink\" title=\"3.(面试的重点)AMD规范和CMD规范比较大的区别：\"></a>3.(面试的重点)AMD规范和CMD规范比较大的区别：</h2></blockquote>\n<ul>\n<li><p>1.AMD规范就是指requireJS</p>\n<ul>\n<li>–&gt;ansnc module define: 异步模块定义（异步加载模块，依赖前置）<ul>\n<li>–&gt;模块定义和导入（使用）：define定义一个模块，define([“导入的模块”])/require([“导入的模块”])</li>\n<li>–&gt;异步加载模块 动态创建script标签</li>\n<li>–&gt;把所有依赖的模块放在文件的头部</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>2.CMD规范就是指的seajs</p>\n<ul>\n<li>–&gt;common module define：通用模块定义(同步加载模块)</li>\n<li>–&gt;模块定义和导入：exports/module.exports</li>\n<li>–&gt;同步加载模块</li>\n<li>–&gt;依赖就近：50行代码使用商品模块的功能，就在49行依赖商品模块</li>\n</ul>\n</li>\n<li><p>3.CommonJS规范：nodeJS</p>\n</li>\n</ul>\n<blockquote>\n<h2 id=\"4-requireJS这种模块化解决方案称之为AMD规范\"><a href=\"#4-requireJS这种模块化解决方案称之为AMD规范\" class=\"headerlink\" title=\"4.requireJS这种模块化解决方案称之为AMD规范\"></a>4.requireJS这种模块化解决方案称之为AMD规范</h2></blockquote>\n<ul>\n<li><p>AMD:async module define:异步模块定义</p>\n</li>\n<li><p>一直非常现实的有CMD规范–》sea.js(玉伯)</p>\n<ul>\n<li>CMD:common module define(借鉴了node.js中的CommonJS规范)</li>\n</ul>\n</li>\n<li><p>模块化规范：AMD CMD CommonJS</p>\n</li>\n<li><p>模块化解决方案：requireJS seaJS browerify webpack</p>\n</li>\n<li><p>MV*: mvc mvvm mvp</p>\n</li>\n<li><p>组件化开发：react</p>\n</li>\n</ul>\n","categories":[{"name":"RequireJS","path":"api/categories/RequireJS.json"}],"tags":[{"name":"开发用到的新技术","path":"api/tags/开发用到的新技术.json"}]}