{"title":"上下文调用模式","slug":"上下文调用模式(call和apply的区别）","date":"2017-09-20T01:59:08.710Z","updated":"2017-09-14T16:27:03.859Z","comments":true,"excerpt":"","content":"<blockquote>\n<h2 id=\"调用方式1-函数调用\"><a href=\"#调用方式1-函数调用\" class=\"headerlink\" title=\"调用方式1 函数调用\"></a>调用方式1 函数调用</h2></blockquote>\n<ul>\n<li><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>);</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'test 调用了'</span>);</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(argument);</div><div class=\"line\">&#125;</div><div class=\"line\">test();</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<h2 id=\"调用方式2-call方法调用\"><a href=\"#调用方式2-call方法调用\" class=\"headerlink\" title=\"调用方式2 call方法调用\"></a>调用方式2 call方法调用</h2></blockquote>\n<ul>\n<li>动态改变this  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">参数<span class=\"number\">1</span>：<span class=\"keyword\">this</span>是要替换test的对象</div><div class=\"line\">参数<span class=\"number\">2</span>：...参数n 传递给函数的实参</div><div class=\"line\"></div><div class=\"line\">test.call(&#123;<span class=\"attr\">name</span>:<span class=\"string\">'jack'</span>,<span class=\"attr\">skill</span>:<span class=\"string\">'jump'</span>&#125;,<span class=\"string\">'rose'</span>,<span class=\"string\">'john'</span>)</div><div class=\"line\"><span class=\"comment\">//(调用一个对象的一个方法，以另一个对象替换当前对象,即调用上面test的方法)</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<h2 id=\"调用方式3-apply方法调用\"><a href=\"#调用方式3-apply方法调用\" class=\"headerlink\" title=\"调用方式3 apply方法调用\"></a>调用方式3 apply方法调用</h2></blockquote>\n<ul>\n<li>也可以动态的改变this  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">参数<span class=\"number\">1</span>：<span class=\"keyword\">this</span>是要替换test的对象</div><div class=\"line\">参数<span class=\"number\">2</span>：传入一个数组(或伪数组)传递给函数</div><div class=\"line\"></div><div class=\"line\">test.apply(&#123;<span class=\"attr\">name</span>:<span class=\"string\">'rose'</span>,<span class=\"attr\">skill</span>:<span class=\"string\">'swim'</span>&#125;,&#123;<span class=\"number\">0</span>:<span class=\"string\">'jack'</span>,<span class=\"number\">1</span>:<span class=\"string\">'rose'</span>,<span class=\"attr\">length</span>:<span class=\"number\">1</span>&#125;)</div><div class=\"line\"><span class=\"comment\">//与call差不多</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<h2 id=\"call和apply的区别：\"><a href=\"#call和apply的区别：\" class=\"headerlink\" title=\"call和apply的区别：\"></a>call和apply的区别：</h2></blockquote>\n<ul>\n<li><p>call方法从第二个参数开始可以接受任意的参数，每个参数会映射到相应位置的func的参数，可以通过参数名调用，但是如果所有参数作为数组传入，他会作为一个整个映射到func对应的第一个参数，之后参数都会为空：</p>\n  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">func</span>(<span class=\"params\">a,b,c</span>)</span>&#123;&#125;</div><div class=\"line\"></div><div class=\"line\">func.call(obj,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>);</div><div class=\"line\"><span class=\"comment\">//function接收到的参数为1,2,3</span></div><div class=\"line\"></div><div class=\"line\">func.call(obj,[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]);</div><div class=\"line\"><span class=\"comment\">//funvtion接收到的参数为[1,2,3],untifined,untifined</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>apply方法最多只有两个参数，第二个参数接受的只能是数组或伪数组，并传入到func对应的参数上</p>\n  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">func.apply(obj,[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>])</div><div class=\"line\"><span class=\"comment\">//function接受到的实际参数是1,2,3</span></div><div class=\"line\"></div><div class=\"line\">func.apply(obj,&#123;<span class=\"number\">0</span>:<span class=\"number\">1</span>,<span class=\"number\">1</span>:<span class=\"number\">2</span>,<span class=\"number\">2</span>:<span class=\"number\">3</span>,<span class=\"attr\">length</span>:<span class=\"number\">3</span>&#125;)</div><div class=\"line\"><span class=\"comment\">//function接收到的参数实际上是1,2,3</span></div></pre></td></tr></table></figure></li>\n</ul>\n","categories":[{"name":"javascript","path":"api/categories/javascript.json"}],"tags":[{"name":"方法区别","path":"api/tags/方法区别.json"}]}